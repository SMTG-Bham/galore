[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "galore"
version = "0.9.2"
description = "Broadening and weighting for simulated spectra"
readme = "README.rst"
keywords = ["spectroscopy", "spectra", "chemistry", "physics",
            "raman", "xps", "haxpes", "pes", "photoelectron",
            "dos", "pdos", "gaussian", "lorentzian", "broadening"]
classifiers = [
            'Development Status :: 5 - Production/Stable',
            'Intended Audience :: Science/Research',
            'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
            'Natural Language :: English',
            'Programming Language :: Python :: 3',
            'Programming Language :: Python :: 3.9',
            'Programming Language :: Python :: 3.10',
            'Topic :: Scientific/Engineering :: Chemistry',
            'Topic :: Scientific/Engineering :: Physics'
]
dependencies = [
    "numpy>= 1.17",
    "scipy",
    "matplotlib",
]
requires-python = ">= 3.9"
maintainers = [
            {name = "Scanlon Materials Theory Group", email = "d.o.scanlon@bham.ac.uk"},
]

[project.urls]
Repository = "https://github.com/SMTG-Bham/galore"

[project.optional-dependencies]
docs = [
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx-argparse",
    "sphinxcontrib-bibtex"
]
vasp = ["pymatgen"]
gpaw = ["gpaw"]

[project.scripts]
galore = "galore.cli.galore:main"
galore-get-cs = "galore.cli.galore_get_cs:main"
galore-plot-cs = "galore.cli.galore_plot_cs:main"

[tool.tox]
legacy_tox_ini = """
    [tox]
    min_version = 4.19
    env_list =
      py39
      py310
      py310-gpaw
      py312

    [testenv]
    deps = coverage
    extras = vasp
    allowlist_externals = coverage
    commands = coverage run --source=galore -m unittest discover test

    [testenv:py310-gpaw]
    platform = linux
    allowlist_externals =
        {[testenv]allowlist_externals}
        gpaw
    commands_pre =
        python -m pip install gpaw
        gpaw install-data --register gpaw_setups

    commands = {[testenv]commands}

"""
